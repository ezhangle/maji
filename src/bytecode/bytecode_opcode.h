#ifndef BYTECODE_OPCODE_H
#define BYTECODE_OPCODE_H

enum bytecode_opcode
{
    BYTECODE_OPCODE_HALT               = 0x00,

    BYTECODE_OPCODE_MOV_INT8_REG_IMM   = 0x01,
    BYTECODE_OPCODE_MOV_INT16_REG_IMM  = 0x02,
    BYTECODE_OPCODE_MOV_INT32_REG_IMM  = 0x03,
    BYTECODE_OPCODE_MOV_INT64_REG_IMM  = 0x04,
    BYTECODE_OPCODE_MOV_FLT32_REG_IMM  = 0x05,
    BYTECODE_OPCODE_MOV_FLT64_REG_IMM  = 0x06,
    BYTECODE_OPCODE_MOV_REG_REG        = 0x07,
    BYTECODE_OPCODE_MOV_INT8_LCL_IMM   = 0x08,
    BYTECODE_OPCODE_MOV_INT16_LCL_IMM  = 0x09,
    BYTECODE_OPCODE_MOV_INT32_LCL_IMM  = 0x0A,
    BYTECODE_OPCODE_MOV_INT64_LCL_IMM  = 0x0B,
    BYTECODE_OPCODE_MOV_FLT32_LCL_IMM  = 0x0C,
    BYTECODE_OPCODE_MOV_FLT64_LCL_IMM  = 0x0D,
    BYTECODE_OPCODE_MOV_LCL_REG        = 0x0E,
    BYTECODE_OPCODE_MOV_INT8_REG_LCL   = 0x0F,
    BYTECODE_OPCODE_MOV_INT16_REG_LCL  = 0x10,
    BYTECODE_OPCODE_MOV_INT32_REG_LCL  = 0x11,
    BYTECODE_OPCODE_MOV_INT64_REG_LCL  = 0x12,
    BYTECODE_OPCODE_MOV_FLT32_REG_LCL  = 0x13,
    BYTECODE_OPCODE_MOV_FLT64_REG_LCL  = 0x14,

    BYTECODE_OPCODE_PUSH_INT8_IMM      = 0x15,
    BYTECODE_OPCODE_PUSH_INT16_IMM     = 0x16,
    BYTECODE_OPCODE_PUSH_INT32_IMM     = 0x17,
    BYTECODE_OPCODE_PUSH_INT64_IMM     = 0x18,
    BYTECODE_OPCODE_PUSH_FLT32_IMM     = 0x19,
    BYTECODE_OPCODE_PUSH_FLT64_IMM     = 0x1A,
    BYTECODE_OPCODE_PUSH_REG           = 0x1B,

    BYTECODE_OPCODE_POP_REG            = 0x99,
    BYTECODE_OPCODE_POP_INT8_REG       = 0x1C,
    BYTECODE_OPCODE_POP_INT16_REG      = 0x1D,
    BYTECODE_OPCODE_POP_INT32_REG      = 0x1E,
    BYTECODE_OPCODE_POP_INT64_REG      = 0x1F,
    BYTECODE_OPCODE_POP_FLT32_REG      = 0x20,
    BYTECODE_OPCODE_POP_FLT64_REG      = 0x21,

    BYTECODE_OPCODE_ADD_INT8_REG_IMM   = 0x22,
    BYTECODE_OPCODE_ADD_INT16_REG_IMM  = 0x23,
    BYTECODE_OPCODE_ADD_INT32_REG_IMM  = 0x24,
    BYTECODE_OPCODE_ADD_INT64_REG_IMM  = 0x25,
    BYTECODE_OPCODE_ADD_FLT32_REG_IMM  = 0x26,
    BYTECODE_OPCODE_ADD_FLT64_REG_IMM  = 0x27,
    BYTECODE_OPCODE_ADD_REG_REG        = 0x28,

    BYTECODE_OPCODE_SUB_INT8_REG_IMM   = 0x29,
    BYTECODE_OPCODE_SUB_INT16_REG_IMM  = 0x2A,
    BYTECODE_OPCODE_SUB_INT32_REG_IMM  = 0x2B,
    BYTECODE_OPCODE_SUB_INT64_REG_IMM  = 0x2C,
    BYTECODE_OPCODE_SUB_FLT32_REG_IMM  = 0x2D,
    BYTECODE_OPCODE_SUB_FLT64_REG_IMM  = 0x2E,
    BYTECODE_OPCODE_SUB_REG_REG        = 0x2F,

    BYTECODE_OPCODE_MUL_INT8_REG_IMM   = 0x30,
    BYTECODE_OPCODE_MUL_INT16_REG_IMM  = 0x31,
    BYTECODE_OPCODE_MUL_INT32_REG_IMM  = 0x32,
    BYTECODE_OPCODE_MUL_INT64_REG_IMM  = 0x33,
    BYTECODE_OPCODE_MUL_FLT32_REG_IMM  = 0x34,
    BYTECODE_OPCODE_MUL_FLT64_REG_IMM  = 0x35,
    BYTECODE_OPCODE_MUL_REG_REG        = 0x36,

    BYTECODE_OPCODE_DIV_INT8_REG_IMM   = 0x37,
    BYTECODE_OPCODE_DIV_INT16_REG_IMM  = 0x38,
    BYTECODE_OPCODE_DIV_INT32_REG_IMM  = 0x39,
    BYTECODE_OPCODE_DIV_INT64_REG_IMM  = 0x3A,
    BYTECODE_OPCODE_DIV_FLT32_REG_IMM  = 0x3B,
    BYTECODE_OPCODE_DIV_FLT64_REG_IMM  = 0x3C,
    BYTECODE_OPCODE_DIV_REG_REG        = 0x3D,

    BYTECODE_OPCODE_NOT_REG            = 0x3E,
    BYTECODE_OPCODE_LOG_NOT_REG        = 0x3F,
    BYTECODE_OPCODE_NEG_REG            = 0x40,
    BYTECODE_OPCODE_INC_REG            = 0x41,
    BYTECODE_OPCODE_DEC_REG            = 0x42,
    BYTECODE_OPCODE_XOR_REG_REG        = 0x43,

    BYTECODE_OPCODE_TEST_REG_IMM       = 0x44,
    BYTECODE_OPCODE_TEST_REG_REG       = 0x45,
    BYTECODE_OPCODE_CMP_REG_IMM        = 0x46,
    BYTECODE_OPCODE_CMP_REG_REG        = 0x47,
    BYTECODE_OPCODE_JMP_IMM            = 0x48,
    BYTECODE_OPCODE_JNZ_IMM            = 0x49,
    BYTECODE_OPCODE_JZ_IMM             = 0x4A,
    BYTECODE_OPCODE_JLE_IMM            = 0x4B,
    BYTECODE_OPCODE_JL_IMM             = 0x4C,
    BYTECODE_OPCODE_JGE_IMM            = 0x4D,
    BYTECODE_OPCODE_JG_IMM             = 0x4E,

    BYTECODE_OPCODE_CALL_IMM           = 0x50,
    BYTECODE_OPCODE_CALL_REG           = 0x51,
    BYTECODE_OPCODE_CALL_FOREIGN       = 0x52,

    BYTECODE_OPCODE_BEGIN_CALL_FRAME   = 0x60,
    BYTECODE_OPCODE_END_CALL_FRAME     = 0x61,
    BYTECODE_OPCODE_RETURN             = 0x62,

    BYTECODE_OPCODE_LEA_LCL_REG_IMM    = 0x70,
    BYTECODE_OPCODE_LEA_LCL_REG_REG    = 0x71,
    BYTECODE_OPCODE_LEA_BSS_REG_IMM    = 0x72,
    BYTECODE_OPCODE_LEA_BSS_REG_REG    = 0x73,

    BYTECODE_OPCODE_MEMW_INT8_REG_IMM  = 0x80,
    BYTECODE_OPCODE_MEMW_INT16_REG_IMM = 0x81,
    BYTECODE_OPCODE_MEMW_INT32_REG_IMM = 0x82,
    BYTECODE_OPCODE_MEMW_INT64_REG_IMM = 0x83,
    BYTECODE_OPCODE_MEMW_FLT32_REG_IMM = 0x84,
    BYTECODE_OPCODE_MEMW_FLT64_REG_IMM = 0x85,
    BYTECODE_OPCODE_MEMW_REG_REG       = 0x86,

    BYTECODE_OPCODE_MEMR_INT8_REG_REG  = 0x87,
    BYTECODE_OPCODE_MEMR_INT16_REG_REG = 0x88,
    BYTECODE_OPCODE_MEMR_INT32_REG_REG = 0x89,
    BYTECODE_OPCODE_MEMR_INT64_REG_REG = 0x8A,
    BYTECODE_OPCODE_MEMR_FLT32_REG_REG = 0x8B,
    BYTECODE_OPCODE_MEMR_FLT64_REG_REG = 0x8C,

    BYTECODE_OPCODE_CONV_INT8_REG      = 0x90,
    BYTECODE_OPCODE_CONV_INT16_REG     = 0x91,
    BYTECODE_OPCODE_CONV_INT32_REG     = 0x92,
    BYTECODE_OPCODE_CONV_INT64_REG     = 0x93,
    BYTECODE_OPCODE_CONV_FLT32_REG     = 0x94,
    BYTECODE_OPCODE_CONV_FLT64_REG     = 0x95,

    BYTECODE_OPCODE_NOP                = 0xFF,
    BYTECODE_OPCODE_COUNT              = 0x100
};

static const char *bytecode_opcode_str[BYTECODE_OPCODE_COUNT] =
{
    [0x00] = "HALT",

    [0x01] = "MOV_INT8_REG_IMM",
    [0x02] = "MOV_INT16_REG_IMM",
    [0x03] = "MOV_INT32_REG_IMM",
    [0x04] = "MOV_INT64_REG_IMM",
    [0x05] = "MOV_FLT32_REG_IMM",
    [0x06] = "MOV_FLT64_REG_IMM",
    [0x07] = "MOV_REG_REG",
    [0x08] = "MOV_INT8_LCL_IMM",
    [0x09] = "MOV_INT16_LCL_IMM",
    [0x0A] = "MOV_INT32_LCL_IMM",
    [0x0B] = "MOV_INT64_LCL_IMM",
    [0x0C] = "MOV_FLT32_LCL_IMM",
    [0x0D] = "MOV_FLT64_LCL_IMM",
    [0x0E] = "MOV_LCL_REG",
    [0x0F] = "MOV_INT8_REG_LCL",
    [0x10] = "MOV_INT16_REG_LCL",
    [0x11] = "MOV_INT32_REG_LCL",
    [0x12] = "MOV_INT64_REG_LCL",
    [0x13] = "MOV_FLT32_REG_LCL",
    [0x14] = "MOV_FLT64_REG_LCL",

    [0x15] = "PUSH_INT8_IMM",
    [0x16] = "PUSH_INT16_IMM",
    [0x17] = "PUSH_INT32_IMM",
    [0x18] = "PUSH_INT64_IMM",
    [0x19] = "PUSH_FLT32_IMM",
    [0x1A] = "PUSH_FLT64_IMM",
    [0x1B] = "PUSH_REG",

    [0x99] = "POP_REG",
    [0x1C] = "POP_INT8_REG",
    [0x1D] = "POP_INT16_REG",
    [0x1E] = "POP_INT32_REG",
    [0x1F] = "POP_INT64_REG",
    [0x20] = "POP_FLT32_REG",
    [0x21] = "POP_FLT64_REG",

    [0x22] = "ADD_INT8_REG_IMM",
    [0x23] = "ADD_INT16_REG_IMM",
    [0x24] = "ADD_INT32_REG_IMM",
    [0x25] = "ADD_INT64_REG_IMM",
    [0x26] = "ADD_FLT32_REG_IMM",
    [0x27] = "ADD_FLT64_REG_IMM",
    [0x28] = "ADD_REG_REG",

    [0x29] = "SUB_INT8_REG_IMM",
    [0x2A] = "SUB_INT16_REG_IMM",
    [0x2B] = "SUB_INT32_REG_IMM",
    [0x2C] = "SUB_INT64_REG_IMM",
    [0x2D] = "SUB_FLT32_REG_IMM",
    [0x2E] = "SUB_FLT64_REG_IMM",
    [0x2F] = "SUB_REG_REG",

    [0x30] = "MUL_INT8_REG_IMM",
    [0x31] = "MUL_INT16_REG_IMM",
    [0x32] = "MUL_INT32_REG_IMM",
    [0x33] = "MUL_INT64_REG_IMM",
    [0x34] = "MUL_FLT32_REG_IMM",
    [0x35] = "MUL_FLT64_REG_IMM",
    [0x36] = "MUL_REG_REG",

    [0x37] = "DIV_INT8_REG_IMM",
    [0x38] = "DIV_INT16_REG_IMM",
    [0x39] = "DIV_INT32_REG_IMM",
    [0x3A] = "DIV_INT64_REG_IMM",
    [0x3B] = "DIV_FLT32_REG_IMM",
    [0x3C] = "DIV_FLT64_REG_IMM",
    [0x3D] = "DIV_REG_REG",

    [0x3E] = "NOT_REG",
    [0x3F] = "LOG_NOT_REG",
    [0x40] = "NEG_REG",
    [0x41] = "INC_REG",
    [0x42] = "DEC_REG",
    [0x43] = "XOR_REG_REG",

    [0x44] = "TEST_REG_IMM",
    [0x45] = "TEST_REG_REG",
    [0x46] = "CMP_REG_IMM",
    [0x47] = "CMP_REG_REG",
    [0x48] = "JMP_IMM",
    [0x49] = "JNZ_IMM",
    [0x4A] = "JZ_IMM",
    [0x4B] = "JLE_IMM",
    [0x4C] = "JL_IMM",
    [0x4D] = "JGE_IMM",
    [0x4E] = "JG_IMM",

    [0x50] = "CALL_IMM",
    [0x51] = "CALL_REG",
    [0x52] = "CALL_FOREIGN",

    [0x60] = "BEGIN_CALL_FRAME",
    [0x61] = "END_CALL_FRAME",
    [0x62] = "RETURN",

    [0x70] = "LEA_LCL_REG_IMM",
    [0x71] = "LEA_LCL_REG_REG",
    [0x72] = "LEA_BSS_REG_IMM",
    [0x73] = "LEA_BSS_REG_REG",

    [0x80] = "MEMW_INT8_REG_IMM",
    [0x81] = "MEMW_INT16_REG_IMM",
    [0x82] = "MEMW_INT32_REG_IMM",
    [0x83] = "MEMW_INT64_REG_IMM",
    [0x84] = "MEMW_FLT32_REG_IMM",
    [0x85] = "MEMW_FLT64_REG_IMM",
    [0x86] = "MEMW_REG_REG",

    [0x87] = "MEMR_INT8_REG_REG",
    [0x88] = "MEMR_INT16_REG_REG",
    [0x89] = "MEMR_INT32_REG_REG",
    [0x8A] = "MEMR_INT64_REG_REG",
    [0x8B] = "MEMR_FLT32_REG_REG",
    [0x8C] = "MEMR_FLT64_REG_REG",

    [0x90] = "CONV_INT8_REG",
    [0x91] = "CONV_INT16_REG",
    [0x92] = "CONV_INT32_REG",
    [0x93] = "CONV_INT64_REG",
    [0x94] = "CONV_FLT32_REG",
    [0x95] = "CONV_FLT64_REG",

    [0xFF] = "NOP"
};

#endif
